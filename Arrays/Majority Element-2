Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Example 1:

Input: nums = [3,2,3]
Output: [3]
Example 2:

Input: nums = [1]
Output: [1]
// better is -using Hashmap;
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> li = new ArrayList<>();                                t.c=0(n) s.c=0(n)
        HashMap<Integer,Integer> map = new HashMap<>();
        int n=nums.length;
        ///iterate in array
        for(int i=0;i<n;i++){
            //add the element with its frequency in hashmap.
                map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
      //iterate in hashmap
         for(Map.Entry<Integer,Integer> entry:map.entrySet()){
        if(entry.getValue()>n/3)
            li.add(entry.getKey());
      }
       return li;
    }
}

